openapi: 3.0.0
info:
  title: SPARRING_FINDER REST API
  version: 1.2.0
  description: >
    SPARRING FINDER API
servers:
  - url: http://localhost:8000/api
    description: Development server
  - url: http://localhost:7000/api
    description: Staging server
paths:
  /auth/register:
    post:
      tags:
        - User-Authentication
      summary: Register a new user
      requestBody:
        description: User registration data
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterRequest'
      responses:
        '201':
          description: Registration successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegisterResponse'
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '409':
          description: Email already in use
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /auth/login:
    post:
      tags:
        - User-Authentication
      summary: Login user
      requestBody:
        description: User credentials
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
      responses:
        '200':
          description: Login successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponse'
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Invalid credentials
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /auth/verify-email:
    post:
      tags:
        - User
      summary: Verify email address
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VerifyEmailRequest'
      responses:
        '200':
          description: Email verified successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VerifyEmailResponse'
        '400':
          description: Invalid or expired code
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /auth/resend-verification:
    post:
      tags:
        - User
      summary: Resend verification code
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResendVerificationEmailRequest'
      responses:
        '200':
          description: Code resent successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResendVerificationEmailResponse'
        '400':
          description: Already verified
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /auth/forgot-password:
    post:
      tags:
        - User
      summary: Forgot password
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ForgotPasswordRequest'
      responses:
        '200':
          description: Reset code sent
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Reset code sent to your email.

  /auth/reset-password:
    put:
      tags:
        - User
      summary: Reset password
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResetPasswordRequest'
      responses:
        '200':
          description: Password reset successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Password has been updated.

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    RegisterRequest:
      type: object
      required:
        - email
        - password
      properties:
        email:
          type: string
          format: email
        password:
          type: string
          minLength: 6
    RegisterResponse:
      type: object
      properties:
        message:
          type: string
          example: Registration successful
        user:
          $ref: '#/components/schemas/UserProfile'

    LoginRequest:
      type: object
      required:
        - email
        - password
      properties:
        email:
          type: string
        password:
          type: string

    LoginResponse:
      type: object
      properties:
        message:
          type: string
        user:
          $ref: '#/components/schemas/UserProfile'
        accessToken:
          type: string
        refreshToken:
          type: string

    VerifyEmailRequest:
      type: object
      required:
        - code
      properties:
        code:
          type: string
          example: "123456"

    VerifyEmailResponse:
      type: object
      properties:
        message:
          type: string
          example: Email verified successfully

    ResendVerificationEmailRequest:
      type: object
      required:
        - email
      properties:
        email:
          type: string
          format: email

    ResendVerificationEmailResponse:
      type: object
      properties:
        message:
          type: string
          example: Verification email resent successfully

    ForgotPasswordRequest:
      type: object
      required:
        - email
      properties:
        email:
          type: string

    ResetPasswordRequest:
      type: object
      required:
        - code
        - newPassword
      properties:
        code:
          type: string
        newPassword:
          type: string

    UserProfile:
      type: object
      properties:
        id:
          type: integer
        email:
          type: string
        is_verified:
          type: boolean
        is_active:
          type: boolean

    ErrorResponse:
      type: object
      properties:
        error:
          type: string
          example: An unexpected error occurred